#Use colorgcc and C++11
import os

cxx = ARGUMENTS.get('cxx','g++')

cxxflags = ["-std=c++0x","-Wall"]
#Get CLI flags
enableDebug = ARGUMENTS.get('debug', 0)
if int(enableDebug):
    cxxflags.append('-g')

#march
march = ARGUMENTS.get('march','core2')
if march != "none":
    cxxflags.append("-march=%s" % march)

#Optimization level
optimize = ARGUMENTS.get('optimize', '2')
if optimize != "none":
    cxxflags.append("-O%s" % optimize)


libraries = ["zmq","czmq"]

yaklibSrc = ["src/MetaRequests.cpp",
    "src/ReadRequests.cpp",
    "src/WriteRequests.cpp",
    "src/YakClient.cpp",
    "src/Batch.cpp",
    "src/Graph.cpp"
]

Export("yaklibSrc")

testSrc = [
    "test/TestGraph.cpp",
    "test/TestMain.cpp"
]

env = Environment(CXX=cxx,CXXFLAGS=cxxflags,CPPPATH=['include'],
                  ENV = {'PATH' : os.environ['PATH'],
                         'TERM' : os.environ['TERM'],
                         'HOME' : os.environ['HOME']})

libyakclientA = env.Library(target="yakclient",source=yaklibSrc)
libyakclientSO = env.SharedLibrary(target="yakclient",source=yaklibSrc)
env.Program(target="yakctest",source=testSrc, LIBS=["boost_unit_test_framework",libyakclientA,"zmq","czmq"],LDPATH="../clientbuild")

env.Install("/usr/local/lib", [libyakclientSO, libyakclientA])
env.Install("/usr/local/include", "../YakClient/include/yakclient")
env.Alias('install', ['/usr/local/lib','/usr/local/include'])
#env.Program(target="kvc", source=zkvSource,LIBS=libraries)

